  // //api送信state
  // const [name, setName] = useState("");
  // const [email, setEmail] = useState("");
  // const [password, setPassword] = useState("");
  // const [password_confirmation, setPassword_confirmation] = useState("");

  // //変更用
  // const onChengeName = (e) => setName(e.target.value);
  // const onChengeEmail = (e) => setEmail(e.target.value);
  // const onChengePass = (e) => setPassword(e.target.value);
  // const onChengePass_con = (e) => setPassword_confirmation(e.target.value);
  //初期値
  // useEffect(() => {
  //   setName(loginUser?.user.name ?? "")
  //   setEmail(loginUser?.user.email ?? "")
  // }, [loginUser])


{/* <form>
            <Stack spacing={3} py={4} px={5}>
              <FormLabel htmlFor="name" fontSize={{ base: "md", md: "md" }}>名前</FormLabel>
              <Input type="text"
                // value={name}
                onChenge={onChengeName}
                placeholder="name" />

              <FormLabel htmlFor="email" fontSize={{ base: "md", md: "md" }}>メール</FormLabel>
              <Input
                type="text" mt={0} value={email} placeholder="email" onChenge={onChengeEmail}
              />

              <FormLabel htmlFor="password" fontSize={{ base: "md", md: "md" }}>パスワード（変更する場合）</FormLabel>
              <Input
                type="password" placeholder="password" onChenge={onChengePass} value={password}
              />
              <FormLabel htmlFor="password_cofirmation" fontSize={{ base: "md", md: "md" }}>パスワード（確認用）</FormLabel>
              <Input type="password" placeholder="password_confirmation"
                value={password_confirmation} onChenge={onChengePass_con} />
            </Stack>
            <Button
              mt={4}
              mx="auto"
              colorScheme="teal"
              width="75%"
              isLoading={loading}
              type="submit"
              onClick={onSubmit}
            >変更する</Button>
          </form> */}
