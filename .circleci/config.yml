version: 2.1

# DOC:https://qiita.com/tktcorporation/items/dcb621922cfb6fcb5ebe
# executors:
#   api:
#     machine:
#     # docker-composeがインストール済みの仮想マシンをプル
#       image: circleci/classic:edge
#       #キャッシュをtrueにしDockerイメージのビルド時間を短縮
#       #DOC:https://circleci.com/docs/ja/2.0/docker-layer-caching/
#       docker_layer_caching: true
#   frontend:
#     machine:
#       image: circleci/classic:edge
#       docker_layer_caching: true

# executors:
#   my-executor:
#     docker:
#       - image: cimg/ruby:3.0.3-browsers
#         auth:
#           username: mydockerhub-user
#           password: $DOCKERHUB_PASSWORD  # context / project UI env-var reference

# jobs:
#   my-job:
#     executor: my-executor
#     steps:
#       - run: echo outside the executor
#1つ以上のjobsマスト
# jobが1つだけの場合、job名は build でなければならない
jobs:
  build:
    machine:
      #     # docker-composeがインストール済みの仮想マシンをプル
      image: circleci/classic:edge
    environment:
    #commons
      WORKDIR: app
      CONTAINER_PORT: 3000
      API_PORT: 3000
      FRONT_PORT: 3001
      # db 本来ここで記載すべきではないが、ポートフォリオ なのでここで宣言してしまう
      MYSQL_ROOT_USER: root
      MYSQL_ROOT_PASSWORD: password
    # executor: api
    # working_directory: /Users/kiyomasa/environment/cooklog
    working_directory: ~/repo
    steps:
      - checkout
      #checkout: CI環境上の working_directory の値の場所にGitリポジトリをコピーする
      - run:
          name: Install Docker Compose
          environment:
            COMPOSE_VERSION: "1.29.2"
          command: |
            curl -L "https://github.com/docker/compose/releases/download/${COMPOSE_VERSION}/docker-compose-$(uname -s)-$(uname -m)" -o ~/docker-compose
            chmod +x ~/docker-compose
            sudo mv ~/docker-compose /usr/local/bin/docker-compose
      #ビルド＆コンテナ起動
      - run:
          name: docker-compose up
          command: |
            set -x
            docker-compose up --build -d
      #一度ストップさせないとうまくいかない
      - run:
          name: docker-compose stop
          command: |
            set -x
            docker-compose stop
      - run:
          name: docker-compose up
          command: |
            set -x
            docker-compose up -d
      #rspecのテストを実行
      - run:
          name: Rspec
          command: |
            docker-compose run api bundle exec rspec
      - run:
          name: docker-compose down
          command: docker-compose down
# - build
#     - install Docker
#     - working_dir  ~/cooklog
#     - コンテナ起動
#     - test
#     - down
# - depry　①
#     - working_dir ./api
#     - run git push heroku master
# - depry 　②
#     - working_dir ./frontend
#     - run git push heroku master
# workflows:
#   version: 2
#   test_and_deploy:
#     jobs:
#       - build
#       - test:
#           requires:
#             - build
