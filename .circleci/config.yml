version: 2.1

orbs: 
  ruby: circleci/ruby@1.4.0
  # heroku: circleci/heroku@1.2.3

jobs:
  build:
    docker:
      - image: cimg/ruby:3.1.0
  #githubのコードからコピー
    working_directory: ~/cooklog2/api
    steps:
      - checkout:
          path: ~/cooklog2
      #bundle install
      - ruby/install-deps

  test:
    docker:
      - image: cimg/ruby:3.1.0
      - image: cimg/mysql:8.0
        environment:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: cooklog_test
          MYSQL_USER: root
    environment:
      BUNDLE_JOBS: "3"
      BUNDLE_RETRY: "3"
      APP_DATABASE_HOST: "127.0.0.1"
      RAILS_ENV: test
    working_directory: ~/cooklog2/api
    steps:
      - checkout:
          path: ~/cooklog2
      - ruby/install-deps
      - run:
          name: Database setup
          command: bundle exec rails db:migrate
      # - run:
      #     name: test
      #     command: bundle exec rake test
      - ruby/rspec-test

  # deploy:
  #   docker:
  #     - image: circleci/ruby:2.7
  #   steps:
  #     - checkout
  #     - setup_remote_docker:
  #         version: 19.03.13
  #     - heroku/install
  #     - run:
  #         name: heroku login
  #         command: heroku container:login
  #     - run:
  #         name: push docker image
  #         command: heroku container:push web -a $HEROKU_APP_NAME
  #     - run:
  #         name: release docker image
  #         command: heroku container:release web -a $HEROKU_APP_NAME
  #     - run:
  #         name: database setup
  #         command: heroku run bundle exec rake db:migrate RAILS_ENV=production -a $HEROKU_APP_NAME

workflows:
  version: 2
  build_test_and_deploy:
    jobs:
      - build
      - test:
          requires:
            - build
      # - deploy:
      #     requires:
      #       - test
      #     filters:
      #       branches:
      #         only: main

#Docker-compose使用ver未決定
# version: 2.1

# jobs:
#   build:
#     docker:
#       - image: cimg/base:2020.01
#     steps:
#       - checkout
#       - setup_remote_docker
#       # - run:
#       #     name: login
#       #     command: echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin
#       - run:
#           name: docker-compose build
#           # command: |
#           # sudo chown root:$(whoami) /run/docker-temp.sock 
#           # docker-compose build
#           command:  docker-compose build
#         # environment:
#         #     RAILS_ENV: test
#         #     WORKDIR: ~/cooklog
#         #     CONTAINER_PORT: '3000'
#         #     API_PORT: '3000'
#         #     FRONT_PORT: '3001'
#   # testするjob
#   test:
#     docker:
#       - image: cimg/base:2020.01
#     steps:
#       - checkout
#       - setup_remote_docker
#       - run:
#           name: docker-compose up -d
#           command: sudo docker-compose up -d
#       # - run: sleep 30
#       - run:
#           name: docker-compose run api rails db:create RAILS_ENV=test
#           command: sudo docker-compose run api rails db:create RAILS_ENV=test
#       - run:
#           name: docker-compose run api rails db:migrate RAILS_ENV=test
#           command: sudo docker-compose run api rails db:migrate RAILS_ENV=test
#       - run:
#           name: docker-compose run api bundle exec rspec spec
#           command: sudo docker-compose run api bundle exec rspec spec
#       - run:
#           name: docker-compose down
#           command: sudo docker-compose down

# # 順番を制御するworkflow
# workflows:
#   build_and_test_and_deploy:
#     jobs:
#       - build
#           # context: my_portfolio_context
#       - test:
#           # context: my_portfolio_context
#           requires:
#             - build
# # DOC:https://qiita.com/tktcorporation/items/dcb621922cfb6fcb5ebe
# # executors:
# #   api:
# #     docker:
# #       # - image: circleci/ruby:2.5.8-node
# #       - image: cimg/ruby:3.1.0
# #         environment:
# #           RAILS_ENV: test
# #           API_DOMAIN: "http://localhost:$FRONT_PORT"
# #           WORKDIR: app
# #           CONTAINER_PORT: 3000
# #           API_PORT: 3000
#           FRONT_PORT: 3001
#           BUNDLE_RETRY: 3
#           BUNDLE_PATH: vendor/bundle
#           BUNDLE_JOBS: 4
#           BUNDLER_VERSION: 2.2.3
#       - image: circleci/mysql:8.0
#         environment:
#           MYSQL_ROOT_USER: root
#           MYSQL_ROOT_PASSWORD: password
#     working_directory: ~/cooklog/api

# commands:
#   install_bundler:
#     description: Bundler install
#     steps:
#       - run: gem install bundler
# jobs:
#   fetch_source_code:
#     executor:
#       name: api
#     steps:
#       - checkout

#   bundle_dependencies:
#     executor:
#       name: api
#     steps:
#       - install_bundler
#       - run:
#           name: Bundle Install Dependencies
#           working_directory: ~/cooklog/api
#           command: |
#             bundle install

#   rspec:
#     executor:
#       name: api
#     steps:
#       - run:
#           name: Watting stand up database
#           working_directory: ~/cooklog/api
#           command: |
#             dockerize -wait \
#             tcp://127.0.0.1:3306 -timeout 120s
#       # Database setup
#       # - run: mv ./api/config/database.yml.ci ./api/config/database.yml
#       - install_bundler
#       - run:
#           command: |
#             bundle install
#           working_directory: ~/cooklog/api
#       - run:
#           name: Testing DB migration
#           working_directory: ~/cooklog/api
#           command: |
#             bundle exec rails db:create db:migrate
#       - run:
#           name: Run rspec
#           command: |
#             bundle exec rails db:create db:migrate
#           working_directory: ~/cooklog/api

# # 本番環境デプロイ
# # build_and_push_image_api:
# #     machine:
# #       image: ubuntu-1604:201903-01
# #     steps:
# #       - checkout
# #       - aws-ecr/build-and-push-image:
# #           account-url: AWS_ACCOUNT_URL
# #           repo: "rails_react_docker_api"
# #           region: AWS_REGION
# #           tag: "${CIRCLE_SHA1}"
# #           path: ./api/

# #   build_and_push_image_web:
# #     machine:
# #       image: ubuntu-1604:201903-01
# #     steps:
# #       - checkout
# #       - aws-ecr/build-and-push-image:
# #           account-url: AWS_ACCOUNT_URL
# #           repo: "rails_react_docker_web"
# #           region: AWS_REGION
# #           tag: "${CIRCLE_SHA1}"
# #           path: ./nginx/
# workflows:
#   build:
#     jobs:
#       - fetch_source_code
#       - bundle_dependencies:
#           requires:
#             - fetch_source_code
#       - rspec:
#           requires:
#             - bundle_dependencies
#       # - lint:
#       #     requires:
#       #       - fetch_source_code
#       # - build_and_push_image_api:
#       #     requires:
#       #       - rubocop
#       #       - rspec
#       #     filters:
#       #       branches:
#       #         only: master
#       # - build_and_push_image_web:
#       #     requires:
#       #       - rubocop
#       #       - rspec
#       #     filters:
#       #       branches:
#       #         only: master
#     # docker-composeがインストール済みの仮想マシンをプル
#       image: circleci/classic:edge
#       #キャッシュをtrueにしDockerイメージのビルド時間を短縮
#       #DOC:https://circleci.com/docs/ja/2.0/docker-layer-caching/
#       docker_layer_caching: true
#   frontend:
#     machine:
#       image: circleci/classic:edge
#       docker_layer_caching: true

# executors:
#   my-executor:
#     docker:
#       - image: cimg/ruby:3.0.3-browsers
#         auth:
#           username: mydockerhub-user
#           password: $DOCKERHUB_PASSWORD  # context / project UI env-var reference

# jobs:
#   my-job:
#     executor: my-executor
#     steps:
#       - run: echo outside the executor
#1つ以上のjobsマスト
# jobが1つだけの場合、job名は build でなければならない
# jobs:
#   build:
#     machine:
#       #     # docker-composeがインストール済みの仮想マシンをプル
#       image: circleci/classic:edge
#     environment:
#     #commons
#       WORKDIR: app
#       CONTAINER_PORT: 3000
#       API_PORT: 3000
#       FRONT_PORT: 3001
#       # db 本来ここで記載すべきではないが、ポートフォリオ なのでここで宣言してしまう
#       MYSQL_ROOT_USER: root
#       MYSQL_ROOT_PASSWORD: password
#     # executor: api
#     # working_directory: /Users/kiyomasa/environment/cooklog
#     working_directory: ~/repo
#     steps:
#       - checkout
#       #checkout: CI環境上の working_directory の値の場所にGitリポジトリをコピーする
#       - run:
#           name: Install Docker Compose
#           environment:
#             COMPOSE_VERSION: "1.29.2"
#           command: |
#             curl -L "https://github.com/docker/compose/releases/download/${COMPOSE_VERSION}/docker-compose-$(uname -s)-$(uname -m)" -o ~/docker-compose
#             chmod +x ~/docker-compose
#             sudo mv ~/docker-compose /usr/local/bin/docker-compose
#       #ビルド＆コンテナ起動
#       - run:
#           name: docker-compose up
#           command: |
#             set -x
#             docker-compose up --build -d
#       #一度ストップさせないとうまくいかない
#       - run:
#           name: docker-compose stop
#           command: |
#             set -x
#             docker-compose stop
#       - run:
#           name: docker-compose up
#           command: |
#             set -x
#             docker-compose up -d
#       #rspecのテストを実行
#       - run:
#           name: Rspec
#           command: |
#             docker-compose run api bundle exec rspec
#       - run:
#           name: docker-compose down
#           command: docker-compose down
# # - build
# #     - install Docker
# #     - working_dir  ~/cooklog
# #     - コンテナ起動
# #     - test
# #     - down
# # - depry　①
# #     - working_dir ./api
# #     - run git push heroku master
# # - depry 　②
# #     - working_dir ./frontend
# #     - run git push heroku master
# # workflows:
# #   version: 2
# #   test_and_deploy:
# #     jobs:
# #       - build
# #       - test:
# #           requires:
# #             - build
